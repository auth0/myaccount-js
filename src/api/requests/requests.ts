// This file was auto-generated by Fern from our API Definition.

import * as Auth0MyAccount from "../index.js";

/**
 * @example
 *     {}
 */
export interface UpdateAuthenticationMethodRequestContent {
    /** The friendly name of the authentication method */
    name?: string;
    /** The preferred authentication method (for phone authenticators) */
    preferred_authentication_method?: Auth0MyAccount.PhoneAuthenticationMethodEnum;
}

/**
 * @example
 *     {
 *         connection: "connection",
 *         redirect_uri: "redirect_uri"
 *     }
 */
export interface CreateConnectedAccountsRequestContent {
    /** The name of the connection to link the account with (e.g., 'google-oauth2', 'facebook'). */
    connection: string;
    /** The URI to redirect to after the connection process completes. */
    redirect_uri: string;
    /** An opaque value used to maintain state between the request and callback. */
    state?: string;
    /** The PKCE code challenge derived from the code verifier. */
    code_challenge?: string;
    /** The method used to derive the code challenge. Required when code_challenge is provided. */
    code_challenge_method?: "S256";
    authorization_params?: Auth0MyAccount.AuthorizationParams;
}

/**
 * @example
 *     {
 *         auth_session: "auth_session",
 *         connect_code: "connect_code",
 *         redirect_uri: "redirect_uri"
 *     }
 */
export interface CompleteConnectedAccountsRequestContent {
    /** The authentication session identifier */
    auth_session: string;
    /** The authorization code returned from the connect flow */
    connect_code: string;
    /** The redirect URI used in the original request */
    redirect_uri: string;
    /** The PKCE code verifier */
    code_verifier?: string;
}

/**
 * @example
 *     {
 *         connection: "connection",
 *         from: "from",
 *         take: 1
 *     }
 */
export interface ListConnectedAccountsRequestParameters {
    /** Filter connected accounts by connection names */
    connection?: Auth0MyAccount.ConnectionNamesFilter | null;
    /** Cursor for pagination - start retrieving results from this point */
    from?: string | null;
    /** Number of results to return (1-20) */
    take?: number | null;
}

/**
 * @example
 *     {
 *         from: "from",
 *         take: 1
 *     }
 */
export interface ListConnectedAccountsConnectionsRequestParameters {
    /** Cursor for pagination - start retrieving results from this point */
    from?: string | null;
    /** Number of results to return (1-20) */
    take?: number | null;
}
